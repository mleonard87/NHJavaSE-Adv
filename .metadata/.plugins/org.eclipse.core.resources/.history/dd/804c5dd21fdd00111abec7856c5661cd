package com.webagesolutions.util;

import java.beans.BeanInfo;
import java.beans.PropertyDescriptor;

public class Introspector
{
  public static Object getProperty(Object target, String propertyName)
  {
    try {
      BeanInfo beanInfo = java.beans.Introspector
          .getBeanInfo(target.getClass());
      for (PropertyDescriptor d : beanInfo.getPropertyDescriptors()) {
        if (propertyName.equals(d.getName())) {
          System.out.println("introspector invoking "
              + d.getReadMethod().getName());
          return d.getReadMethod().invoke(target);
        }
      }
    } catch (Exception e) {
      throw new RuntimeException(e);
    }
    return null;
//    throw new RuntimeException("no " + propertyName + " porperty found on "
//        + target.getClass().getName());
  }
  
  public static Object setProperty(Object target, String propertyName, Object value)
  {
    try {
      BeanInfo beanInfo = java.beans.Introspector
          .getBeanInfo(target.getClass());
      for (PropertyDescriptor d : beanInfo.getPropertyDescriptors()) {
        if (propertyName.equals(d.getName())) {
          System.out.println("introspector invoking "
              + d.getWriteMethod().getName());
          return d.getWriteMethod().invoke(target);
        }
      }
    } catch (Exception e) {
      throw new RuntimeException(e);
    }
    return null;
//    throw new RuntimeException("no " + propertyName + " porperty found on "
//        + target.getClass().getName());
  }
}
